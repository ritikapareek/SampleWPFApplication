<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:SampleApplication.ViewModel"
    xmlns:vw="clr-namespace:SampleApplication.View">



    <!-- 
  This template applies an AllContactsView to an instance 
  of the AllContactsViewModel class shown in the main window.
  -->
    <DataTemplate DataType="{x:Type vm:AllContactsViewModel}">
        <vw:AllContactsView />
    </DataTemplate>

    <!-- 
  This template applies a ContactsView to an instance  
  of the ContactsViewModel class shown in the main window.
  -->
    <DataTemplate DataType="{x:Type vm:ContactViewModel}">
        <vw:ContactView />
    </DataTemplate>

    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="{StaticResource WindowBackground}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  Styling for Border
  -->
    <Style x:Key="StyleBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Orange" />
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8,8,3,3" />
     </Style>


    <Color x:Key="BackgroundColorValue1" A="255" R="0" G="133" B="209"></Color>
    <Color x:Key="BackgroundColorValue2" A="255" R="0" G="61" B="94"></Color>


    <Color x:Key="MouseHover1" A="255" R="0" G="156" B="231"></Color>
    <Color x:Key="MouseHover2" A="255" R="0" G="90" B="155"></Color>


    <Color x:Key="MousePress1" A="255" R="0" G="98" B="195"></Color>
    <Color x:Key="MousePress2" A="255" R="0" G="36" B="72"></Color>


    <Color x:Key="IsNotEnabledBackgroundColor1" A="255" R="233" G="233" B="233"></Color>
    <Color x:Key="IsNotEnabledBackgroundColor2" A="255" R="240" G="240" B="240"></Color>


    <SolidColorBrush x:Key="BorderBrush" Color="#B7B7B7">

    </SolidColorBrush>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
       
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1"  />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="t" Margin="{TemplateBinding Margin}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                 CornerRadius="6">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop x:Name="BackgroudgradientSop1" Offset="0" Color="{StaticResource BackgroundColorValue1}" />
                                    <GradientStop x:Name="BackgroudgradientSop2" Offset="1" Color="{StaticResource BackgroundColorValue2}" />
                                </LinearGradientBrush.GradientStops>

                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="DisabledAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource IsNotEnabledBackgroundColor1}"
                                                        Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource IsNotEnabledBackgroundColor2}"
                                                        Duration="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="EnableAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue1}"
                                                        Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue2}"
                                                        Duration="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True"  />

                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseoverAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseHover1 }"
                                                        Duration="0:0:0:1"/>

                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseHover2 }"
                                                        Duration="0:0:0:1"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseOutAnimation"  FillBehavior="Stop">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue1 }"
                                                        Duration="0:0:0:1"/>

                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue2 }"
                                                        Duration="0:0:0:1"/>

                                    </Storyboard>
                                </BeginStoryboard>

                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseDownAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MousePress1 }"
                                                        Duration="0:0:0:1"/>

                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MousePress2 }"
                                                        Duration="0:0:0:1"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseUpAnimation" FillBehavior="Stop">
                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop1" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue1 }"
                                                        Duration="0:0:0:1"/>

                                        <ColorAnimation Storyboard.TargetName="BackgroudgradientSop2" Storyboard.TargetProperty="Color"
                                                        To="{StaticResource BackgroundColorValue2 }"
                                                        Duration="0:0:0:1"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>
    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Main Menu' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Foreground="Black"  Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
                
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="DescriptionTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>
</ResourceDictionary>